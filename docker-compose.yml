# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3.7'
# Define services
services:
  # Front service
  front-server:
    # Configuration for building the docker image for the front service
    build:
      context: animal-picture-front # Use an image built from the specified dockerfile
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always

    environment: # Pass environment variables to the service
      ZEEBE_CLIENT_CLOUD_REGIION:
      ZEEBE_CLIENT_CLOUD_CLUSTER_ID: 6e5a734f-c43c-4fee-b979-e0188c381029.dsm-1.zeebe.camunda.io:443
      ZEEBE_CLINET_CLOUD_CLIENT_ID: ~wUnnA2B~OgxA1m6r3TmmT9BFk_oMS0I
      ZEEBE_CLIENT_CLOUD_CLIENT_SECRET: OfR7jg~fQtOPUXBZiOGP1GEiv-kD7.ecM_TDzZdyCJUxRBDFnHP1AMKnyh6OD~Wc
    
      ZEEBE_ADDRESS: 6e5a734f-c43c-4fee-b979-e0188c381029.dsm-1.zeebe.camunda.io:443
      ZEEBE_CLIENT_ID: ~wUnnA2B~OgxA1m6r3TmmT9BFk_oMS0I
      ZEEBE_CLIENT_SECRET: OfR7jg~fQtOPUXBZiOGP1GEiv-kD7.ecM_TDzZdyCJUxRBDFnHP1AMKnyh6OD~Wc
      ZEEBE_AUTHORIZATION_SERVER_URL: https://login.cloud.camunda.io/oauth/token
      ZEEBE_TOKEN_AUDIENCE: zeebe.camunda.io
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - pictures


  # Worker service
  worker-server:
    # Configuration for building the docker image for the worker service
    build:
      context: animal-picture-worker # Use an image built from the specified dockerfile
      dockerfile: Dockerfile
    ports:
      - "8081:8081" # Forward the exposed port 8081 on the container to port 8081 on the host machine
    restart: always

    environment: # Pass environment variables to the service
      ZEEBE_ADDRESS: 6e5a734f-c43c-4fee-b979-e0188c381029.dsm-1.zeebe.camunda.io:443
      ZEEBE_CLIENT_ID: ~wUnnA2B~OgxA1m6r3TmmT9BFk_oMS0I
      ZEEBE_CLIENT_SECRET: OfR7jg~fQtOPUXBZiOGP1GEiv-kD7.ecM_TDzZdyCJUxRBDFnHP1AMKnyh6OD~Wc
      ZEEBE_AUTHORIZATION_SERVER_URL: https://login.cloud.camunda.io/oauth/token
      ZEEBE_TOKEN_AUDIENCE: zeebe.camunda.io
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - pictures

  # App service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: animal-picture-app # Use an image built from the specified dockerfile in the `registration` directory.
      dockerfile: Dockerfile
    ports:
      - "8082:8082" # Forward the exposed port 8082 on the container to port 8082 on the host machine
    restart: always
    depends_on: 
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/pictures_db?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: pictures_u
      SPRING_DATASOURCE_PASSWORD: pictures_p
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - pictures


  # Database Service (Mysql)
  db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: pictures_db
      MYSQL_USER: pictures_u
      MYSQL_PASSWORD: pictures_p
      MYSQL_ROOT_PASSWORD: root0808
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - pictures
# Volumes
volumes:
  db-data:
# Networks to be created to facilitate communication between containers
networks:
  pictures: